{"ast":null,"code":"const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\nexport function setTokens({\n  refreshToken,\n  idToken,\n  expiresIn = 3600\n}) {\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(TOKEN_KEY, idToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\nexport function getAccessToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY);\n}\nexport function getTokenExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getTokenExpiresDate,\n  getRefreshToken\n};\nexport default localStorageService;","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/services/localStorageService.js"],"names":["TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","setTokens","refreshToken","idToken","expiresIn","expiresDate","Date","getTime","localStorage","setItem","getAccessToken","getItem","getRefreshToken","getTokenExpiresDate","localStorageService"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAlB;AACA,MAAMC,WAAW,GAAG,mBAApB;AACA,MAAMC,WAAW,GAAG,aAApB;AAEA,OAAO,SAASC,SAAT,CAAmB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,OAAhB;AAAyBC,EAAAA,SAAS,GAAG;AAArC,CAAnB,EAAgE;AACrE,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuBH,SAAS,GAAG,IAAvD;AACAI,EAAAA,YAAY,CAACC,OAAb,CAAqBX,SAArB,EAAgCK,OAAhC;AACAK,EAAAA,YAAY,CAACC,OAAb,CAAqBV,WAArB,EAAkCG,YAAlC;AACAM,EAAAA,YAAY,CAACC,OAAb,CAAqBT,WAArB,EAAkCK,WAAlC;AACD;AAED,OAAO,SAASK,cAAT,GAA0B;AAC/B,SAAOF,YAAY,CAACG,OAAb,CAAqBb,SAArB,CAAP;AACD;AACD,OAAO,SAASc,eAAT,GAA2B;AAChC,SAAOJ,YAAY,CAACG,OAAb,CAAqBZ,WAArB,CAAP;AACD;AAED,OAAO,SAASc,mBAAT,GAA+B;AACpC,SAAOL,YAAY,CAACG,OAAb,CAAqBX,WAArB,CAAP;AACD;AAED,MAAMc,mBAAmB,GAAG;AAC1Bb,EAAAA,SAD0B;AAE1BS,EAAAA,cAF0B;AAG1BG,EAAAA,mBAH0B;AAI1BD,EAAAA;AAJ0B,CAA5B;AAOA,eAAeE,mBAAf","sourcesContent":["const TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\n\nexport function setTokens({ refreshToken, idToken, expiresIn = 3600 }) {\n  const expiresDate = new Date().getTime() + expiresIn * 1000;\n  localStorage.setItem(TOKEN_KEY, idToken);\n  localStorage.setItem(REFRESH_KEY, refreshToken);\n  localStorage.setItem(EXPIRES_KEY, expiresDate);\n}\n\nexport function getAccessToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function getRefreshToken() {\n  return localStorage.getItem(REFRESH_KEY);\n}\n\nexport function getTokenExpiresDate() {\n  return localStorage.getItem(EXPIRES_KEY);\n}\n\nconst localStorageService = {\n  setTokens,\n  getAccessToken,\n  getTokenExpiresDate,\n  getRefreshToken,\n};\n\nexport default localStorageService;\n"]},"metadata":{},"sourceType":"module"}