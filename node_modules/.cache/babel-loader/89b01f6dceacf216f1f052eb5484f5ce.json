{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/ui/registerForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n    licence: false\n  });\n  const {\n    qualities\n  } = useQualities();\n  const qualitiesList = qualities.map(q => ({\n    label: q.name,\n    value: q._id\n  }));\n  const {\n    professions\n  } = useProfessions();\n  const professionsList = professions.map(p => ({\n    label: p.name,\n    value: p._id\n  }));\n  const {\n    signUp\n  } = useAuth();\n  const [errors, setErrors] = useState({});\n\n  const getProfessionById = id => {\n    for (const prof of professions) {\n      if (prof.value === id) {\n        return {\n          _id: prof.value,\n          name: prof.label\n        };\n      }\n    }\n  };\n\n  const getQualities = elements => {\n    const qualitiesArray = [];\n\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality].value) {\n          qualitiesArray.push({\n            _id: qualities[quality].value,\n            name: qualities[quality].label,\n            color: qualities[quality].color\n          });\n        }\n      }\n    }\n\n    return qualitiesArray;\n  };\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\"\n      }\n    },\n    licence: {\n      isRequired: {\n        message: \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = { ...data,\n      qualities: data.qualities.map(q => q.value)\n    };\n    console.log(newData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438 \\u0441\\u0432\\u043E\\u044E \\u043F\\u0440\\u043E\\u0444\\u0435\\u0441\\u0441\\u0438\\u044E\",\n      defaultOption: \"Choose...\",\n      options: professionsList,\n      name: \"profession\",\n      onChange: handleChange,\n      value: data.profession,\n      error: errors.profession\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RadioField, {\n      options: [{\n        name: \"Male\",\n        value: \"male\"\n      }, {\n        name: \"Female\",\n        value: \"female\"\n      }, {\n        name: \"Other\",\n        value: \"other\"\n      }],\n      value: data.sex,\n      name: \"sex\",\n      onChange: handleChange,\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448 \\u043F\\u043E\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MultiSelectField, {\n      options: qualitiesList,\n      onChange: handleChange,\n      defaultValue: data.qualities,\n      name: \"qualities\",\n      label: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0432\\u0430\\u0448\\u0438 \\u043A\\u0430\\u0447\\u0435\\u0441\\u0442\\u0432\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.licence,\n      onChange: handleChange,\n      name: \"licence\",\n      error: errors.licence,\n      children: [\"\\u041F\\u043E\\u0434\\u0442\\u0432\\u0435\\u0440\\u0434\\u0438\\u0442\\u044C \", /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\u043B\\u0438\\u0446\\u0435\\u043D\\u0437\\u0438\\u043E\\u043D\\u043D\\u043E\\u0435 \\u0441\\u043E\\u0433\\u043B\\u0430\\u0448\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mx-auto\",\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterForm, \"JSFTmn54yJ9iIPNWNW9HOMs0cdk=\", false, function () {\n  return [useQualities, useProfessions, useAuth];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/ui/registerForm.jsx"],"names":["React","useEffect","useState","validator","TextField","SelectField","RadioField","MultiSelectField","CheckBoxField","useProfessions","useQualities","useAuth","RegisterForm","data","setData","email","password","profession","sex","qualities","licence","qualitiesList","map","q","label","name","value","_id","professions","professionsList","p","signUp","errors","setErrors","getProfessionById","id","prof","getQualities","elements","qualitiesArray","elem","quality","push","color","handleChange","target","prevState","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","min","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","newData","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport SelectField from \"../common/form/selectField\";\nimport RadioField from \"../common/form/radioField\";\nimport MultiSelectField from \"../common/form/multiSelectField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useProfessions } from \"../../hooks/useProfession\";\nimport { useQualities } from \"../../hooks/useQualities\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst RegisterForm = () => {\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    profession: \"\",\n    sex: \"male\",\n    qualities: [],\n    licence: false,\n  });\n\n  const { qualities } = useQualities();\n  const qualitiesList = qualities.map((q) => ({\n    label: q.name,\n    value: q._id,\n  }));\n  const { professions } = useProfessions();\n  const professionsList = professions.map((p) => ({\n    label: p.name,\n    value: p._id,\n  }));\n  const { signUp } = useAuth();\n  const [errors, setErrors] = useState({});\n\n  const getProfessionById = (id) => {\n    for (const prof of professions) {\n      if (prof.value === id) {\n        return { _id: prof.value, name: prof.label };\n      }\n    }\n  };\n  const getQualities = (elements) => {\n    const qualitiesArray = [];\n    for (const elem of elements) {\n      for (const quality in qualities) {\n        if (elem.value === qualities[quality].value) {\n          qualitiesArray.push({\n            _id: qualities[quality].value,\n            name: qualities[quality].label,\n            color: qualities[quality].color,\n          });\n        }\n      }\n    }\n    return qualitiesArray;\n  };\n\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\",\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\",\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\",\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8,\n      },\n    },\n    profession: {\n      isRequired: {\n        message: \"Обязательно выберите вашу профессию\",\n      },\n    },\n    licence: {\n      isRequired: {\n        message:\n          \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\",\n      },\n    },\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    const newData = { ...data, qualities: data.qualities.map((q) => q.value) };\n    console.log(newData);\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Электронная почта\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Пароль\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <SelectField\n        label=\"Выбери свою профессию\"\n        defaultOption=\"Choose...\"\n        options={professionsList}\n        name=\"profession\"\n        onChange={handleChange}\n        value={data.profession}\n        error={errors.profession}\n      />\n      <RadioField\n        options={[\n          { name: \"Male\", value: \"male\" },\n          { name: \"Female\", value: \"female\" },\n          { name: \"Other\", value: \"other\" },\n        ]}\n        value={data.sex}\n        name=\"sex\"\n        onChange={handleChange}\n        label=\"Выберите ваш пол\"\n      />\n      <MultiSelectField\n        options={qualitiesList}\n        onChange={handleChange}\n        defaultValue={data.qualities}\n        name=\"qualities\"\n        label=\"Выберите ваши качества\"\n      />\n      <CheckBoxField\n        value={data.licence}\n        onChange={handleChange}\n        name=\"licence\"\n        error={errors.licence}\n      >\n        Подтвердить <a>лицензионное соглашение</a>\n      </CheckBoxField>\n      <button\n        className=\"btn btn-primary w-100 mx-auto\"\n        type=\"submit\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n"]},"metadata":{},"sourceType":"module"}