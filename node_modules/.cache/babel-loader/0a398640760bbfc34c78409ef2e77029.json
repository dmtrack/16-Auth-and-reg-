{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/ui/loginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const history = useHistory();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    stayOn: false\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n  const {\n    signIn\n  } = useAuth();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n\n    try {\n      await signIn(); // history.push(\"/\");\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.stayOn,\n      onChange: handleChange,\n      name: \"stayOn\",\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mx-auto\",\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"D7YZaSyWLEkjFwIUXZhxgcR/Yzs=\", false, function () {\n  return [useHistory, useAuth];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/ui/loginForm.jsx"],"names":["React","useEffect","useState","validator","TextField","CheckBoxField","useHistory","useAuth","LoginForm","history","data","setData","email","password","stayOn","errors","setErrors","handleChange","target","prevState","name","value","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","min","validate","Object","keys","length","isValid","signIn","handleSubmit","e","preventDefault","console","log","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\nconst LoginForm = () => {\n  const history = useHistory();\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    stayOn: false,\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = (target) => {\n    setData((prevState) => ({\n      ...prevState,\n      [target.name]: target.value,\n    }));\n  };\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\",\n      },\n      isEmail: {\n        message: \"Email введен некорректно\",\n      },\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\",\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\",\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\",\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8,\n      },\n    },\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const isValid = Object.keys(errors).length === 0;\n\n  const { signIn } = useAuth();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n    try {\n      await signIn();\n      // history.push(\"/\");\n    } catch (error) {\n      setErrors(error);\n    }\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        label=\"Электронная почта\"\n        name=\"email\"\n        value={data.email}\n        onChange={handleChange}\n        error={errors.email}\n      />\n      <TextField\n        label=\"Пароль\"\n        type=\"password\"\n        name=\"password\"\n        value={data.password}\n        onChange={handleChange}\n        error={errors.password}\n      />\n      <CheckBoxField value={data.stayOn} onChange={handleChange} name=\"stayOn\">\n        Оставаться в системе\n      </CheckBoxField>\n      <button\n        className=\"btn btn-primary w-100 mx-auto\"\n        type=\"submit\"\n        disabled={!isValid}\n      >\n        Submit\n      </button>\n    </form>\n  );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}