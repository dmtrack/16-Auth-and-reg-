{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/hooks/useUsers.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/React.createContext();\nexport const useUser = () => {\n  _s();\n\n  return useContext(UserContext);\n};\n\n_s(useUser, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst UserProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [users, setUsers] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n\n  async function getUsers() {\n    try {\n      const {\n        content\n      } = await userService.get();\n      setUsers(content);\n      setLoading(false);\n    } catch (error) {\n      errorCatcher(error);\n    }\n  }\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      users\n    },\n    children: !isLoading ? children : \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s2(UserProvider, \"1HQ9Df1fZRRjs5YIlDeK+Msw+IA=\");\n\n_c = UserProvider;\nUserProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default UserProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/hooks/useUsers.jsx"],"names":["React","useContext","useEffect","useState","PropTypes","userService","toast","UserContext","createContext","useUser","UserProvider","children","users","setUsers","isLoading","setLoading","error","setError","getUsers","content","get","errorCatcher","message","response","data","propTypes","oneOfType","arrayOf","node"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,WAAW,gBAAGP,KAAK,CAACQ,aAAN,EAApB;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACzB,SAAOR,UAAU,CAACM,WAAD,CAAjB;AACH,CAFM;;GAAME,O;;AAIb,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,SAAD,EAAYC,UAAZ,IAA0BZ,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;AAGAhB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIc,KAAK,KAAK,IAAd,EAAoB;AAChBV,MAAAA,KAAK,CAACU,KAAD,CAAL;AACAC,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;AACJ,GALQ,EAKN,CAACD,KAAD,CALM,CAAT;;AAMA,iBAAeE,QAAf,GAA0B;AACtB,QAAI;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAc,MAAMd,WAAW,CAACe,GAAZ,EAA1B;AACAP,MAAAA,QAAQ,CAACM,OAAD,CAAR;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAJD,CAIE,OAAOC,KAAP,EAAc;AACZK,MAAAA,YAAY,CAACL,KAAD,CAAZ;AACH;AACJ;;AACD,WAASK,YAAT,CAAsBL,KAAtB,EAA6B;AACzB,UAAM;AAAEM,MAAAA;AAAF,QAAcN,KAAK,CAACO,QAAN,CAAeC,IAAnC;AACAP,IAAAA,QAAQ,CAACK,OAAD,CAAR;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACD,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF,KAA7B;AAAA,cACK,CAACE,SAAD,GAAaH,QAAb,GAAwB;AAD7B;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCD;;IAAMD,Y;;KAAAA,Y;AAkCNA,YAAY,CAACe,SAAb,GAAyB;AACrBd,EAAAA,QAAQ,EAAEP,SAAS,CAACsB,SAAV,CAAoB,CAC1BtB,SAAS,CAACuB,OAAV,CAAkBvB,SAAS,CAACwB,IAA5B,CAD0B,EAE1BxB,SAAS,CAACwB,IAFgB,CAApB;AADW,CAAzB;AAOA,eAAelB,YAAf","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst UserContext = React.createContext();\n\nexport const useUser = () => {\n    return useContext(UserContext);\n};\n\nconst UserProvider = ({ children }) => {\n    const [users, setUsers] = useState([]);\n    const [isLoading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    useEffect(() => {\n        getUsers();\n    }, []);\n    useEffect(() => {\n        if (error !== null) {\n            toast(error);\n            setError(null);\n        }\n    }, [error]);\n    async function getUsers() {\n        try {\n            const { content } = await userService.get();\n            setUsers(content);\n            setLoading(false);\n        } catch (error) {\n            errorCatcher(error);\n        }\n    }\n    function errorCatcher(error) {\n        const { message } = error.response.data;\n        setError(message);\n        setLoading(false);\n    }\n    return (\n        <UserContext.Provider value={{ users }}>\n            {!isLoading ? children : \"Loading...\"}\n        </UserContext.Provider>\n    );\n};\n\nUserProvider.propTypes = {\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default UserProvider;\n"]},"metadata":{},"sourceType":"module"}