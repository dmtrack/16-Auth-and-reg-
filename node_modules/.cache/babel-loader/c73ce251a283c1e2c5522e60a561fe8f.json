{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/hooks/useAuth.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpAuth = axios.create();\nconst AuthContext = /*#__PURE__*/React.createContext();\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nconst TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s2();\n\n  const [currentUser, setUser] = useState({});\n\n  function setTokens({\n    refreshToken,\n    idToken,\n    expiresIn = 3600,\n    localId\n  }) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(TOKEN_KEY, idToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n  }\n\n  async function signUp({\n    email,\n    password\n  }) {\n    const key = \"AIzaSyAEElVS8GpTM-oWFvYwGuqjdjmT7dGC2pM\";\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${key}`;\n    const {\n      data\n    } = await httpAuth.post(url, {\n      email,\n      password,\n      returnSecureToken: true\n    });\n    setTokens(data, \"setTokens\");\n  }\n\n  async function createUser(data) {\n    try {\n      const {\n        content\n      } = userService.create(data);\n      setUser(content);\n    } catch (error) {}\n  }\n\n  function errorCatcher(error) {\n    const {\n      message\n    } = error.response.data;\n    setError(message);\n  }\n\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      signUp\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(AuthProvider, \"W/ZsoPAdX2JuePmfQ7DUwCtk92s=\");\n\n_c = AuthProvider;\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node])\n};\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/hooks/useAuth.jsx"],"names":["React","useContext","useEffect","useState","PropTypes","axios","userService","toast","httpAuth","create","AuthContext","createContext","useAuth","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","AuthProvider","children","currentUser","setUser","setTokens","refreshToken","idToken","expiresIn","localId","expiresDate","Date","getTime","localStorage","setItem","signUp","email","password","key","url","data","post","returnSecureToken","createUser","content","error","errorCatcher","message","response","setError","propTypes","oneOfType","arrayOf","node"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport userService from \"../services/user.service\";\nimport { toast } from \"react-toastify\";\n\nconst httpAuth = axios.create();\nconst AuthContext = React.createContext();\n\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};\nconst TOKEN_KEY = \"jwt-token\";\nconst REFRESH_KEY = \"jwt-refresh-token\";\nconst EXPIRES_KEY = \"jwt-expires\";\n\nconst AuthProvider = ({ children }) => {\n  const [currentUser, setUser] = useState({});\n  function setTokens({ refreshToken, idToken, expiresIn = 3600, localId }) {\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\n    localStorage.setItem(TOKEN_KEY, idToken);\n    localStorage.setItem(REFRESH_KEY, refreshToken);\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\n  }\n\n  async function signUp({ email, password }) {\n    const key = \"AIzaSyAEElVS8GpTM-oWFvYwGuqjdjmT7dGC2pM\";\n    const url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${key}`;\n    const { data } = await httpAuth.post(url, {\n      email,\n      password,\n      returnSecureToken: true,\n    });\n    setTokens(data, \"setTokens\");\n  }\n  async function createUser(data) {\n    try {\n      const { content } = userService.create(data);\n      setUser(content);\n    } catch (error) {}\n  }\n\n  function errorCatcher(error) {\n    const { message } = error.response.data;\n    setError(message);\n  }\n  useEffect(() => {\n    if (error !== null) {\n      toast(error);\n      setError(null);\n    }\n  }, [error]);\n  return (\n    <AuthContext.Provider value={{ signUp }}>{children}</AuthContext.Provider>\n  );\n};\n\nAuthProvider.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]),\n};\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}