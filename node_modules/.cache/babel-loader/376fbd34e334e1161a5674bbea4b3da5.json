{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/common/comments/addCommentForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../../../api\";\nimport SelectField from \"../form/selectField\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialData = {\n  userId: \"\",\n  content: \"\"\n};\n\nconst AddCommentForm = ({\n  onSubmit\n}) => {\n  _s();\n\n  const [data, setData] = useState(initialData);\n  const [users, setUsers] = useState({});\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    userId: {\n      isRequired: {\n        message: \"Выберите от чьего имени вы хотите отправить сообщение\"\n      }\n    },\n    content: {\n      isRequired: {\n        message: \"Сообщение не может быть пустым\"\n      }\n    }\n  };\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  useEffect(() => {\n    API.users.fetchAll().then(setUsers);\n  }, []);\n\n  const clearForm = () => {\n    setData(initialData);\n    setErrors({});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    onSubmit(data);\n    clearForm();\n  };\n\n  const arrayOfUsers = users && Object.keys(users).map(userId => ({\n    label: users[userId].name,\n    value: users[userId]._id\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(SelectField, {\n        onChange: handleChange,\n        options: arrayOfUsers,\n        name: \"userId\",\n        value: data.userId,\n        defaultOption: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\",\n        error: errors.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextAreaField, {\n        value: data.content,\n        onChange: handleChange,\n        name: \"content\",\n        label: \"\\u0421\\u043E\\u043E\\u0431\\u0449\\u0435\\u043D\\u0438\\u0435\",\n        error: errors.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex justify-content-end\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"\\u041E\\u043F\\u0443\\u0431\\u043B\\u0438\\u043A\\u043E\\u0432\\u0430\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddCommentForm, \"fOL39fI7lRE06S6+ErrlOE8zSGs=\");\n\n_c = AddCommentForm;\nAddCommentForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nexport default AddCommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCommentForm\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/common/comments/addCommentForm.jsx"],"names":["React","useEffect","useState","API","SelectField","TextAreaField","validator","PropTypes","initialData","userId","content","AddCommentForm","onSubmit","data","setData","users","setUsers","errors","setErrors","handleChange","target","prevState","name","value","validatorConfig","isRequired","message","validate","Object","keys","length","fetchAll","then","clearForm","handleSubmit","e","preventDefault","isValid","arrayOfUsers","map","label","_id","propTypes","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport API from \"../../../api\";\nimport SelectField from \"../form/selectField\";\nimport TextAreaField from \"../form/textAreaField\";\nimport { validator } from \"../../../utils/validator\";\nimport PropTypes from \"prop-types\";\nconst initialData = { userId: \"\", content: \"\" };\n\nconst AddCommentForm = ({ onSubmit }) => {\n    const [data, setData] = useState(initialData);\n    const [users, setUsers] = useState({});\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        userId: {\n            isRequired: {\n                message: \"Выберите от чьего имени вы хотите отправить сообщение\"\n            }\n        },\n        content: {\n            isRequired: {\n                message: \"Сообщение не может быть пустым\"\n            }\n        }\n    };\n\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    useEffect(() => {\n        API.users.fetchAll().then(setUsers);\n    }, []);\n    const clearForm = () => {\n        setData(initialData);\n        setErrors({});\n    };\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        onSubmit(data);\n        clearForm();\n    };\n    const arrayOfUsers =\n        users &&\n        Object.keys(users).map((userId) => ({\n            label: users[userId].name,\n            value: users[userId]._id\n        }));\n    return (\n        <div>\n            <h2>New comment</h2>\n            <form onSubmit={handleSubmit}>\n                <SelectField\n                    onChange={handleChange}\n                    options={arrayOfUsers}\n                    name=\"userId\"\n                    value={data.userId}\n                    defaultOption=\"Выберите пользователя\"\n                    error={errors.userId}\n                />\n                <TextAreaField\n                    value={data.content}\n                    onChange={handleChange}\n                    name=\"content\"\n                    label=\"Сообщение\"\n                    error={errors.content}\n                />\n                <div className=\"d-flex justify-content-end\">\n                    <button className=\"btn btn-primary\">Опубликовать</button>\n                </div>\n            </form>\n        </div>\n    );\n};\nAddCommentForm.propTypes = {\n    onSubmit: PropTypes.func\n};\n\nexport default AddCommentForm;\n"]},"metadata":{},"sourceType":"module"}