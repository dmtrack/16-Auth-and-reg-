{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/ui/loginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  const [data, setData] = useState({\n    email: \"\",\n    password: \"\",\n    stayOn: false\n  });\n  const [errors, setErrors] = useState({});\n\n  const handleChange = target => {\n    setData(prevState => ({ ...prevState,\n      [target.name]: target.value\n    }));\n  };\n\n  const validatorConfig = {\n    email: {\n      isRequired: {\n        message: \"Электронная почта обязательна для заполнения\"\n      },\n      isEmail: {\n        message: \"Email введен некорректно\"\n      }\n    },\n    password: {\n      isRequired: {\n        message: \"Пароль обязателен для заполнения\"\n      },\n      isCapitalSymbol: {\n        message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n      },\n      isContainDigit: {\n        message: \"Пароль должен содержать хотя бы одно число\"\n      },\n      min: {\n        message: \"Пароль должен состоять минимум из 8 символов\",\n        value: 8\n      }\n    }\n  };\n  useEffect(() => {\n    validate();\n  }, [data]);\n\n  const validate = () => {\n    const errors = validator(data, validatorConfig);\n    setErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const isValid = Object.keys(errors).length === 0;\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validate();\n    if (!isValid) return;\n    console.log(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u042D\\u043B\\u0435\\u043A\\u0442\\u0440\\u043E\\u043D\\u043D\\u0430\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\",\n      name: \"email\",\n      value: data.email,\n      onChange: handleChange,\n      error: errors.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n      type: \"password\",\n      name: \"password\",\n      value: data.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckBoxField, {\n      value: data.stayOn,\n      onChange: handleChange,\n      name: \"stayOn\",\n      children: \"\\u041E\\u0441\\u0442\\u0430\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary w-100 mx-auto\",\n      type: \"submit\",\n      disabled: !isValid,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"H8UnavgQ3EVXea6/9JKZ23hKPhI=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/ui/loginForm.jsx"],"names":["React","useEffect","useState","validator","TextField","CheckBoxField","LoginForm","data","setData","email","password","stayOn","errors","setErrors","handleChange","target","prevState","name","value","validatorConfig","isRequired","message","isEmail","isCapitalSymbol","isContainDigit","min","validate","Object","keys","length","isValid","handleSubmit","e","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { validator } from \"../../utils/validator\";\nimport TextField from \"../common/form/textField\";\nimport CheckBoxField from \"../common/form/checkBoxField\";\n\nconst LoginForm = () => {\n    const [data, setData] = useState({\n        email: \"\",\n        password: \"\",\n        stayOn: false\n    });\n    const [errors, setErrors] = useState({});\n    const handleChange = (target) => {\n        setData((prevState) => ({\n            ...prevState,\n            [target.name]: target.value\n        }));\n    };\n    const validatorConfig = {\n        email: {\n            isRequired: {\n                message: \"Электронная почта обязательна для заполнения\"\n            },\n            isEmail: {\n                message: \"Email введен некорректно\"\n            }\n        },\n        password: {\n            isRequired: {\n                message: \"Пароль обязателен для заполнения\"\n            },\n            isCapitalSymbol: {\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\n            },\n            isContainDigit: {\n                message: \"Пароль должен содержать хотя бы одно число\"\n            },\n            min: {\n                message: \"Пароль должен состоять минимум из 8 символов\",\n                value: 8\n            }\n        }\n    };\n    useEffect(() => {\n        validate();\n    }, [data]);\n    const validate = () => {\n        const errors = validator(data, validatorConfig);\n        setErrors(errors);\n        return Object.keys(errors).length === 0;\n    };\n    const isValid = Object.keys(errors).length === 0;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const isValid = validate();\n        if (!isValid) return;\n        console.log(data);\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <TextField\n                label=\"Электронная почта\"\n                name=\"email\"\n                value={data.email}\n                onChange={handleChange}\n                error={errors.email}\n            />\n            <TextField\n                label=\"Пароль\"\n                type=\"password\"\n                name=\"password\"\n                value={data.password}\n                onChange={handleChange}\n                error={errors.password}\n            />\n            <CheckBoxField\n                value={data.stayOn}\n                onChange={handleChange}\n                name=\"stayOn\"\n            >\n                Оставаться в системе\n            </CheckBoxField>\n            <button\n                className=\"btn btn-primary w-100 mx-auto\"\n                type=\"submit\"\n                disabled={!isValid}\n            >\n                Submit\n            </button>\n        </form>\n    );\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}