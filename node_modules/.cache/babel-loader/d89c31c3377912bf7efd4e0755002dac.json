{"ast":null,"code":"var _jsxFileName = \"/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/common/comments/comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport API from \"../../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Comment = ({\n  content,\n  created_at: created,\n  _id: id,\n  userId,\n  onRemove\n}) => {\n  _s();\n\n  const [user, setUser] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    setIsLoading(true);\n    API.users.getById(userId).then(data => {\n      setUser(data);\n      setIsLoading(false);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light card-body  mb-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: isLoading ? \"Loading ...\" : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex flex-start \",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://avatars.dicebear.com/api/avataaars/${(Math.random() + 1).toString(36).substring(7)}.svg`,\n            className: \"rounded-circle shadow-1-strong me-3\",\n            alt: \"avatar\",\n            width: \"65\",\n            height: \"65\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1 flex-shrink-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-between align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"mb-1 \",\n                  children: [user && user.name, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"small\",\n                    children: [\"- \", displayDate(created)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-sm text-primary d-flex align-items-center\",\n                  onClick: () => onRemove(id),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"bi bi-x-lg\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"small mb-0\",\n                children: content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Comment, \"O+Z4TU8gUylAKBniu2WeJ2G5X+U=\");\n\n_c = Comment;\nComment.propTypes = {\n  content: PropTypes.string,\n  edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  userId: PropTypes.string,\n  onRemove: PropTypes.func,\n  _id: PropTypes.string\n};\nexport default Comment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"sources":["/Users/dmtrack/Documents/JS/Module 2 React/16 {Auth and reg}/src/app/components/common/comments/comment.jsx"],"names":["React","useEffect","useState","PropTypes","displayDate","API","Comment","content","created_at","created","_id","id","userId","onRemove","user","setUser","isLoading","setIsLoading","users","getById","then","data","Math","random","toString","substring","name","propTypes","string","edited_at","oneOfType","number","func"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { displayDate } from \"../../../utils/displayDate\";\nimport API from \"../../../api\";\nconst Comment = ({\n    content,\n    created_at: created,\n    _id: id,\n    userId,\n    onRemove\n}) => {\n    const [user, setUser] = useState();\n    const [isLoading, setIsLoading] = useState(false);\n    useEffect(() => {\n        setIsLoading(true);\n        API.users.getById(userId).then((data) => {\n            setUser(data);\n            setIsLoading(false);\n        });\n    }, []);\n\n    return (\n        <div className=\"bg-light card-body  mb-3\">\n            <div className=\"row\">\n                {isLoading ? (\n                    \"Loading ...\"\n                ) : (\n                    <div className=\"col\">\n                        <div className=\"d-flex flex-start \">\n                            <img\n                                src={`https://avatars.dicebear.com/api/avataaars/${(\n                                    Math.random() + 1\n                                )\n                                    .toString(36)\n                                    .substring(7)}.svg`}\n                                className=\"rounded-circle shadow-1-strong me-3\"\n                                alt=\"avatar\"\n                                width=\"65\"\n                                height=\"65\"\n                            />\n                            <div className=\"flex-grow-1 flex-shrink-1\">\n                                <div className=\"mb-4\">\n                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                        <p className=\"mb-1 \">\n                                            {user && user.name}{\" \"}\n                                            <span className=\"small\">\n                                                - {displayDate(created)}\n                                            </span>\n                                        </p>\n                                        <button\n                                            className=\"btn btn-sm text-primary d-flex align-items-center\"\n                                            onClick={() => onRemove(id)}\n                                        >\n                                            <i className=\"bi bi-x-lg\"></i>\n                                        </button>\n                                    </div>\n                                    <p className=\"small mb-0\">{content}</p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\nComment.propTypes = {\n    content: PropTypes.string,\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    userId: PropTypes.string,\n    onRemove: PropTypes.func,\n    _id: PropTypes.string\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}